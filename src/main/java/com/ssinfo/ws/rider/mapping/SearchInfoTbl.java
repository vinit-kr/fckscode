package com.ssinfo.ws.rider.mapping;

// Generated 4 Oct, 2014 9:40:17 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SearchInfoTbl generated by hbm2java
 */
@Entity
@Table(name = "search_info_tbl", schema = "public")
public class SearchInfoTbl implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7405258345267094196L;
	private long searchId;
	private LocationInfoTbl locationInfoTblByUserCurrentLocationInfoId;
	private UserTbl userTbl;
	private LocationInfoTbl locationInfoTblByUserDestinationLocationId;
	private String searchType;
	private Date searchDate;
	private Integer availableCoriderCount;
	private Integer matchedCoriderCount;
	private Set<RoutesTbl> routesTbls = new HashSet<RoutesTbl>(0);
	private Set<CoriderInfoTbl> coriderInfoTbls = new HashSet<CoriderInfoTbl>(0);

	/*
	 * private Set<LocationInfoTbl> locationInfoTbls = new
	 * HashSet<LocationInfoTbl>( 0);
	 */

	public SearchInfoTbl() {
	}

	public SearchInfoTbl(long searchId) {
		this.searchId = searchId;
	}

	public SearchInfoTbl(long searchId,
			LocationInfoTbl locationInfoTblByUserCurrentLocationInfoId,
			UserTbl userTbl,
			LocationInfoTbl locationInfoTblByUserDestinationLocationId,
			String searchType, Date searchDate, Date searchTime,
			Integer availableCoriderCount, Integer matchedCoriderCount,
			Set<RoutesTbl> routesTbls, Set<CoriderInfoTbl> coriderInfoTbls) {
		this.searchId = searchId;
		this.locationInfoTblByUserCurrentLocationInfoId = locationInfoTblByUserCurrentLocationInfoId;
		this.userTbl = userTbl;
		this.locationInfoTblByUserDestinationLocationId = locationInfoTblByUserDestinationLocationId;
		this.searchType = searchType;
		this.searchDate = searchDate;
		this.availableCoriderCount = availableCoriderCount;
		this.matchedCoriderCount = matchedCoriderCount;
		this.routesTbls = routesTbls;
		this.coriderInfoTbls = coriderInfoTbls;
		// this.locationInfoTbls = locationInfoTbls;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "search_sequence")
	@SequenceGenerator(name = "search_sequence", sequenceName = "search_sequence", allocationSize = 1)
	@Column(name = "search_id", unique = true, nullable = false)
	public long getSearchId() {
		return this.searchId;
	}

	public void setSearchId(long searchId) {
		this.searchId = searchId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_current_location_info_id")
	public LocationInfoTbl getLocationInfoTblByUserCurrentLocationInfoId() {
		return this.locationInfoTblByUserCurrentLocationInfoId;
	}

	public void setLocationInfoTblByUserCurrentLocationInfoId(
			LocationInfoTbl locationInfoTblByUserCurrentLocationInfoId) {
		this.locationInfoTblByUserCurrentLocationInfoId = locationInfoTblByUserCurrentLocationInfoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public UserTbl getUserTbl() {
		return this.userTbl;
	}

	public void setUserTbl(UserTbl userTbl) {
		this.userTbl = userTbl;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_destination_location_id")
	public LocationInfoTbl getLocationInfoTblByUserDestinationLocationId() {
		return this.locationInfoTblByUserDestinationLocationId;
	}

	public void setLocationInfoTblByUserDestinationLocationId(
			LocationInfoTbl locationInfoTblByUserDestinationLocationId) {
		this.locationInfoTblByUserDestinationLocationId = locationInfoTblByUserDestinationLocationId;
	}

	@Column(name = "search_type", length = 50)
	public String getSearchType() {
		return this.searchType;
	}

	public void setSearchType(String searchType) {
		this.searchType = searchType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "search_date")
	public Date getSearchDate() {
		return this.searchDate;
	}

	public void setSearchDate(Date searchDate) {
		this.searchDate = searchDate;
	}

	@Column(name = "available_corider_count")
	public Integer getAvailableCoriderCount() {
		return this.availableCoriderCount;
	}

	public void setAvailableCoriderCount(Integer availableCoriderCount) {
		this.availableCoriderCount = availableCoriderCount;
	}

	@Column(name = "matched_corider_count")
	public Integer getMatchedCoriderCount() {
		return this.matchedCoriderCount;
	}

	public void setMatchedCoriderCount(Integer matchedCoriderCount) {
		this.matchedCoriderCount = matchedCoriderCount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "searchInfoTbl")
	public Set<RoutesTbl> getRoutesTbls() {
		return this.routesTbls;
	}

	public void setRoutesTbls(Set<RoutesTbl> routesTbls) {
		this.routesTbls = routesTbls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "searchInfoTbl")
	public Set<CoriderInfoTbl> getCoriderInfoTbls() {
		return this.coriderInfoTbls;
	}

	public void setCoriderInfoTbls(Set<CoriderInfoTbl> coriderInfoTbls) {
		this.coriderInfoTbls = coriderInfoTbls;
	}

	/*
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "searchInfoTbl") public
	 * Set<LocationInfoTbl> getLocationInfoTbls() { return
	 * this.locationInfoTbls; }
	 * 
	 * public void setLocationInfoTbls(Set<LocationInfoTbl> locationInfoTbls) {
	 * this.locationInfoTbls = locationInfoTbls; }
	 */

}
